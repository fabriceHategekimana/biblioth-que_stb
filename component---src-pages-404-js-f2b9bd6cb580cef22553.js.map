{"version":3,"file":"component---src-pages-404-js-f2b9bd6cb580cef22553.js","mappings":"0KAGmC,IAE7BA,EAAY,SAAAC,GAAA,SAAAD,IAAA,OAAAC,EAAAC,MAAA,KAAAC,YAAA,KAYf,OAZeC,EAAAA,EAAAA,GAAAJ,EAAAC,GAAAD,EAAAK,UAChBC,OAAA,WACE,MAAM,KAAEC,GAASC,KAAKC,MAEtB,OACEC,EAAAA,cAACC,EAAAA,EAAa,KACZD,EAAAA,cAACE,EAAAA,EAAG,CAACC,MAAM,mBACXH,EAAAA,cAAA,OAAKI,UAAU,wBACbJ,EAAAA,cAAA,UAAI,6BAIZ,EAACV,CAAA,CAZe,CAASU,EAAAA,WAe3B,W,yDCRA,SAASE,EAAGG,GAAsC,IAArC,YAAEC,EAAW,KAAEC,EAAI,KAAEC,EAAI,MAAEL,GAAOE,EAC7C,MAAM,KAAEI,IAASC,EAAAA,EAAAA,gBAAe,YAc1BC,EAAkBL,GAAeG,EAAKG,aAAaN,YAEzD,OACEN,EAAAA,cAACa,EAAAA,EAAM,CACLC,eAAgB,CACdP,QAEFJ,MAAOA,EACPY,cAAe,QAAQN,EAAKG,aAAaT,QACzCK,KAAM,CACJ,CACEQ,KAAM,cACNC,QAASN,GAEX,CACEO,SAAU,WACVD,QAASd,GAEX,CACEe,SAAU,iBACVD,QAASN,GAEX,CACEO,SAAU,UACVD,QAAS,WAEX,CACED,KAAM,eACNC,QAAS,WAEX,CACED,KAAM,kBACNC,QAASR,EAAKG,aAAaO,QAE7B,CACEH,KAAM,gBACNC,QAASd,GAEX,CACEa,KAAM,sBACNC,QAASN,IAEXS,OAAOZ,IAGf,CAEAN,EAAImB,aAAe,CACjBd,KAAM,KACNC,KAAM,GACNF,YAAa,IAUf,K","sources":["webpack://flexible-gatsby/./src/pages/404.js","webpack://flexible-gatsby/./src/components/seo.js"],"sourcesContent":["import React from 'react'\n\nimport DefaultLayout from '../components/layout'\nimport SEO from '../components/seo'\n\nclass NotFoundPage extends React.Component {\n  render() {\n    const { data } = this.props\n\n    return (\n      <DefaultLayout>\n        <SEO title=\"404: Not Found\" />\n        <div className=\"content-box clearfix\">\n          <h1>That page doesn&#39;t exist.</h1>\n        </div>\n      </DefaultLayout>\n    )\n  }\n}\n\nexport default NotFoundPage\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { useStaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"names":["NotFoundPage","_React$Component","apply","arguments","_inheritsLoose","prototype","render","data","this","props","React","DefaultLayout","SEO","title","className","_ref","description","lang","meta","site","useStaticQuery","metaDescription","siteMetadata","Helmet","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps"],"sourceRoot":""}