{"version":3,"file":"component---src-templates-blog-list-js-f69b9b3510ac2d890b04.js","mappings":"8LAKmC,IAE7BA,EAAS,SAAAC,GAAA,SAAAD,IAAA,OAAAC,EAAAC,MAAA,KAAAC,YAAA,KAiFZ,OAjFYC,EAAAA,EAAAA,GAAAJ,EAAAC,GAAAD,EAAAK,UACbC,OAAA,WACE,MAAM,KAAEC,GAASC,KAAKC,MAChBC,EAAYH,EAAKI,KAAKC,aAAaC,MACnCC,EAAQP,EAAKQ,kBAAkBC,OAC/B,YAAEC,EAAW,SAAEC,GAAaV,KAAKC,MAAMU,YACvCC,EAA0B,IAAhBH,EACVI,EAASJ,IAAgBC,EACzBI,EAAWL,EAAc,GAAM,EAAI,IAAM,OAAMA,EAAc,GAC7DM,EAAW,MAAMN,EAAc,IAErC,OACEO,EAAAA,cAACC,EAAAA,EAAa,KACZD,EAAAA,cAACE,EAAAA,EAAG,CACFb,MAAOH,EACPiB,SAAU,CAAC,OAAQ,SAAU,aAAc,WAE7CH,EAAAA,cAAA,OAAKI,UAAU,wBACZd,EAAMe,IAAIC,IAAe,IAAd,KAAEC,GAAMD,EAClB,OACEN,EAAAA,cAAA,WAASI,UAAU,OAAOI,IAAKD,EAAKE,OAAOC,MACxCH,EAAKI,YAAYC,KAChBL,EAAKI,YAAYC,IAAIC,iBACrBN,EAAKI,YAAYC,IAAIC,gBAAgBC,iBACnCd,EAAAA,cAACe,EAAAA,KAAI,CAACC,GAAIT,EAAKE,OAAOC,KAAMN,UAAU,kBACpCJ,EAAAA,cAACiB,EAAAA,EAAW,CACVC,MACEX,EAAKI,YAAYC,IAAIC,gBAAgBC,gBAEvCV,UAAU,aACVI,IACED,EAAKI,YAAYC,IAAIC,gBAAgBC,gBAClCK,IAELC,IAAI,MAIZpB,EAAAA,cAAA,OAAKI,UAAU,gBACbJ,EAAAA,cAAA,MAAII,UAAU,cACZJ,EAAAA,cAACe,EAAAA,KAAI,CAACC,GAAIT,EAAKE,OAAOC,MAAOH,EAAKI,YAAYtB,QAEhDW,EAAAA,cAAA,SAAIO,EAAKc,SACTrB,EAAAA,cAAA,QAAMI,UAAU,aACbG,EAAKI,YAAYW,KAAK,QAEzBtB,EAAAA,cAAA,QAAMI,UAAU,cACbG,EAAKgB,WAAW,oBAM3BvB,EAAAA,cAAA,OAAKI,UAAU,aACbJ,EAAAA,cAAA,OAAKI,UAAU,aAAaoB,KAAK,cAC/BxB,EAAAA,cAAA,WACIJ,GACAI,EAAAA,cAAA,SACEA,EAAAA,cAACe,EAAAA,KAAI,CAACC,GAAIlB,EAAU2B,IAAI,OAAOrB,UAAU,eAAc,oBAK3DJ,EAAAA,cAAA,SACEA,EAAAA,cAAA,QAAMI,UAAU,eAAc,QACtBX,EAAY,OAAKC,KAGzBG,GACAG,EAAAA,cAAA,SACEA,EAAAA,cAACe,EAAAA,KAAI,CAACC,GAAIjB,EAAU0B,IAAI,OAAOrB,UAAU,eAAc,oBAWzE,EAAC5B,CAAA,CAjFY,CAASwB,EAAAA,WAoFxB,W","sources":["webpack://flexible-gatsby/./src/templates/blog-list.js"],"sourcesContent":["import React from 'react'\nimport { Link, graphql } from 'gatsby'\nimport { GatsbyImage } from 'gatsby-plugin-image'\n\nimport DefaultLayout from '../components/layout'\nimport SEO from '../components/seo'\n\nclass BlogIndex extends React.Component {\n  render() {\n    const { data } = this.props\n    const siteTitle = data.site.siteMetadata.title\n    const posts = data.allMarkdownRemark.edges\n    const { currentPage, numPages } = this.props.pageContext\n    const isFirst = currentPage === 1\n    const isLast = currentPage === numPages\n    const prevPage = currentPage - 1 === 1 ? '/' : `../${currentPage - 1}`\n    const nextPage = `../${currentPage + 1}`\n\n    return (\n      <DefaultLayout>\n        <SEO\n          title={siteTitle}\n          keywords={[`blog`, `gatsby`, `javascript`, `react`]}\n        />\n        <div className=\"content-box clearfix\">\n          {posts.map(({ node }) => {\n            return (\n              <article className=\"post\" key={node.fields.slug}>\n                {node.frontmatter.img &&\n                  node.frontmatter.img.childImageSharp &&\n                  node.frontmatter.img.childImageSharp.gatsbyImageData && (\n                    <Link to={node.fields.slug} className=\"post-thumbnail\">\n                      <GatsbyImage\n                        image={\n                          node.frontmatter.img.childImageSharp.gatsbyImageData\n                        }\n                        className=\"page-image\"\n                        key={\n                          node.frontmatter.img.childImageSharp.gatsbyImageData\n                            .src\n                        }\n                        alt=\"\"\n                      />\n                    </Link>\n                  )}\n                <div className=\"post-content\">\n                  <h2 className=\"post-title\">\n                    <Link to={node.fields.slug}>{node.frontmatter.title}</Link>\n                  </h2>\n                  <p>{node.excerpt}</p>\n                  <span className=\"post-date\">\n                    {node.frontmatter.date}&nbsp;&nbsp;—&nbsp;\n                  </span>\n                  <span className=\"post-words\">\n                    {node.timeToRead} minute read\n                  </span>\n                </div>\n              </article>\n            )\n          })}\n          <div className=\"container\">\n            <nav className=\"pagination\" role=\"navigation\">\n              <ul>\n                {!isFirst && (\n                  <p>\n                    <Link to={prevPage} rel=\"prev\" className=\"newer-posts\">\n                      ← Previous Page\n                    </Link>\n                  </p>\n                )}\n                <p>\n                  <span className=\"page-number\">\n                    Page {currentPage} of {numPages}\n                  </span>\n                </p>\n                {!isLast && (\n                  <p>\n                    <Link to={nextPage} rel=\"next\" className=\"older-posts\">\n                      Next Page →\n                    </Link>\n                  </p>\n                )}\n              </ul>\n            </nav>\n          </div>\n        </div>\n      </DefaultLayout>\n    )\n  }\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query blogPageQuery($skip: Int!, $limit: Int!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      sort: {frontmatter: {date: DESC}}\n      limit: $limit\n      skip: $skip\n      filter: {frontmatter: {draft: {eq: false}}}\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          timeToRead\n          frontmatter {\n            date(formatString: \"YYYY, MMM DD\")\n            title\n            img {\n              childImageSharp {\n                gatsbyImageData(\n                  placeholder: BLURRED\n                  layout: FULL_WIDTH\n                  formats: [AUTO, AVIF, WEBP]\n                )\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"names":["BlogIndex","_React$Component","apply","arguments","_inheritsLoose","prototype","render","data","this","props","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","edges","currentPage","numPages","pageContext","isFirst","isLast","prevPage","nextPage","React","DefaultLayout","SEO","keywords","className","map","_ref","node","key","fields","slug","frontmatter","img","childImageSharp","gatsbyImageData","Link","to","GatsbyImage","image","src","alt","excerpt","date","timeToRead","role","rel"],"sourceRoot":""}